// lib/analyzeStock.js
import axios from "axios";
import { RSI, MACD, StochasticRSI } from "technicalindicators";

export async function analyzeStock(symbol = "FPT") {
  const to = Math.floor(Date.now() / 1000);
  const from = to - 365 * 24 * 60 * 60; // 1 nƒÉm tr∆∞·ªõc
  const countback = 330;

  const url = `https://chart-api.mbs.com.vn/pbRltCharts/chart/v2/history?symbol=${symbol}&resolution=1D&from=${from}&to=${to}&countback=${countback}`;

  const resp = await axios.get(url, { timeout: 15000 });
  const data = resp.data;

  if (!data || data.s !== "ok" || !Array.isArray(data.c) || data.c.length === 0) {
    throw new Error("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá t·ª´ MBS API");
  }

  const closes = data.c.map(Number).filter((n) => !Number.isNaN(n));
  const volumes = Array.isArray(data.v) ? data.v.map(Number) : [];

  if (closes.length < 20) {
    throw new Error("Kh√¥ng ƒë·ªß d·ªØ li·ªáu ƒë·ªÉ t√≠nh ch·ªâ b√°o (√≠t h∆°n 20 phi√™n).");
  }

  // RSI
  const rsiArr = RSI.calculate({ values: closes, period: 14 });
  const rsi = rsiArr.length ? rsiArr[rsiArr.length - 1] : null;

  // MACD
  const macdArr = MACD.calculate({
    values: closes,
    fastPeriod: 12,
    slowPeriod: 26,
    signalPeriod: 9,
    SimpleMAOscillator: false,
    SimpleMASignal: false,
  });
  const macdLast = macdArr.length ? macdArr[macdArr.length - 1] : null;

  // Stochastic RSI
  const stochArr = StochasticRSI.calculate({
    values: closes,
    rsiPeriod: 14,
    stochasticPeriod: 14,
    kPeriod: 3,
    dPeriod: 3,
  });
  const stochLast = stochArr.length ? stochArr[stochArr.length - 1] : null;

  // Gi√° & Volume
  const lastClose = closes[closes.length - 1];
  const prevClose = closes.length > 1 ? closes[closes.length - 2] : lastClose;
  const changePercent = prevClose ? ((lastClose - prevClose) / prevClose) * 100 : 0;
  const lastVolume = volumes.length ? volumes[volumes.length - 1] : 0;
  const avgVolume20 =
    volumes.length >= 20
      ? volumes.slice(-20).reduce((a, b) => a + b, 0) / 20
      : volumes.reduce((a, b) => a + b, 0) / Math.max(1, volumes.length);

  // Nh·∫≠n ƒë·ªãnh
  const rsiComment =
    rsi === null
      ? "N/A"
      : rsi > 70
      ? "‚Üí v√πng qu√° mua, r·ªßi ro ƒëi·ªÅu ch·ªânh"
      : rsi < 30
      ? "‚Üí v√πng qu√° b√°n, c√≥ th·ªÉ h·ªìi ph·ª•c"
      : "‚Üí v√πng trung l·∫≠p";

  const macdComment =
    macdLast === null
      ? "N/A"
      : macdLast.MACD > macdLast.signal
      ? "‚Üí t√≠n hi·ªáu tƒÉng"
      : "‚Üí t√≠n hi·ªáu gi·∫£m";

  const stochComment =
    stochLast === null
      ? "N/A"
      : stochLast.k < 20 && stochLast.d < 20
      ? "‚Üí v√πng qu√° b√°n, c√≥ th·ªÉ h·ªìi k·ªπ thu·∫≠t"
      : stochLast.k > 80 && stochLast.d > 80
      ? "‚Üí v√πng qu√° mua, d·ªÖ ƒëi·ªÅu ch·ªânh"
      : "‚Üí trung l·∫≠p";

  const trendSentence =
    macdLast === null
      ? "kh√¥ng ƒë·ªß d·ªØ li·ªáu ƒë·ªÉ ƒë√°nh gi√° xu h∆∞·ªõng"
      : macdLast.MACD > macdLast.signal
      ? "c√≥ t√≠n hi·ªáu h·ªìi ph·ª•c"
      : "ch·ªãu √°p l·ª±c b√°n";

  const shortForecast =
    (rsi !== null && rsi < 35) || (stochLast && stochLast.k < 20 && stochLast.d < 20)
      ? "Kh·∫£ nƒÉng h·ªìi k·ªπ thu·∫≠t trong ng·∫Øn h·∫°n."
      : macdLast && macdLast.MACD < macdLast.signal
      ? "R·ªßi ro ki·ªÉm ƒë·ªãnh l·∫°i h·ªó tr·ª£."
      : "Ti·∫øp t·ª•c quan s√°t.";

  // Format message
  const message = `üìä Ph√¢n t√≠ch k·ªπ thu·∫≠t ${symbol}

- Gi√° ƒë√≥ng c·ª≠a: ${lastClose.toFixed(2)} (${changePercent >= 0 ? "+" : ""}${changePercent.toFixed(2)}%)
- Kh·ªëi l∆∞·ª£ng: ${(lastVolume / 1_000_000).toFixed(2)}M (TB20: ${(avgVolume20 / 1_000_000).toFixed(2)}M)

üîé Ch·ªâ b√°o:
- RSI(14): ${rsi !== null ? rsi.toFixed(1) : "N/A"} ${rsiComment}
- MACD: ${macdLast ? macdLast.MACD.toFixed(2) : "N/A"} vs Signal ${
    macdLast ? macdLast.signal.toFixed(2) : "N/A"
  } ${macdComment}
- Stochastic RSI: K=${stochLast ? stochLast.k.toFixed(2) : "N/A"}, D=${
    stochLast ? stochLast.d.toFixed(2) : "N/A"
  } ${stochComment}

üìà Xu h∆∞·ªõng:
${symbol} ƒëang ${trendSentence}. ${shortForecast}

‚è∞ ${new Date().toLocaleString("vi-VN", { timeZone: "Asia/Ho_Chi_Minh" })}`;

  return message;
}
