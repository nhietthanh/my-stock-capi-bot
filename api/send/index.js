// api/fpt-history.js
export default async function handler(req, res) {
  const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
  const CHAT_ID = process.env.CHAT_ID;

  try {
    // L·∫•y th·ªùi gian hi·ªán t·∫°i (Unix timestamp gi√¢y)
    const to = Math.floor(Date.now() / 1000);
    const from = to - 365 * 24 * 60 * 60; // 1 nƒÉm tr∆∞·ªõc
    const countback = 330;

    const url = `https://chart-api.mbs.com.vn/pbRltCharts/chart/v2/history?symbol=FPT&resolution=1D&from=${from}&to=${to}&countback=${countback}`;
    const resp = await fetch(url);
    const data = await resp.json();

    if (!data || data.s !== "ok" || !Array.isArray(data.c) || data.c.length === 0) {
      throw new Error("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá t·ª´ MBS API");
    }

    const closeArr = data.c;
    const lastClose = closeArr[closeArr.length - 1];

    const nowVN = new Date().toLocaleString("vi-VN", { timeZone: "Asia/Ho_Chi_Minh" });

    const message = `üìä B√°o c√°o cu·ªëi phi√™n FPT  
Gi√° ƒë√≥ng c·ª≠a: ${lastClose}  
‚è∞ ${nowVN}`;

    await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text: message
      })
    });

    return res.status(200).json({ ok: true, lastClose, message });
  } catch (err) {
    console.error("‚ùó L·ªói khi l·∫•y t·ª´ MBS API:", err.message || err);
    return res.status(500).json({
      error: `‚ùó L·ªói khi l·∫•y d·ªØ li·ªáu FPT: ${err.message || "unknown"}`
    });
  }
}
